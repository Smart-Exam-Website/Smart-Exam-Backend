{
    "openapi": "3.0.0",
    "info": {
        "title": "Smart Exam Website API Documentation",
        "description": "Documentation done using Swagger",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Smart Exam API Server"
        }
    ],
    "paths": {
        "/departments": {
            "get": {
                "tags": [
                    "Departments"
                ],
                "summary": "Get list of Departments",
                "description": "Returns list of Departments",
                "operationId": "getDepartmentsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "departments": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Department"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/exams/step1": {
            "post": {
                "tags": [
                    "Exams"
                ],
                "summary": "Store Exam Data",
                "description": "Returns created exam id",
                "operationId": "storeExamStepOne",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreExamStepOne"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Created exam successfully"
                                        },
                                        "examId": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/exams/step2": {
            "post": {
                "tags": [
                    "Exams"
                ],
                "summary": "Store Exam Data",
                "description": "Add Exam Options",
                "operationId": "storeExamStepTwo",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreExamStepTwo"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully added exam options!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/exams/step3": {
            "post": {
                "tags": [
                    "Exams"
                ],
                "summary": "Store Exam Data",
                "description": "Add Questions",
                "operationId": "storeExamStepThree",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreExamStepThree"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully added questions to exam!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/exams/step4": {
            "post": {
                "tags": [
                    "Exams"
                ],
                "summary": "Store Exam Data",
                "description": "Add question marks and time",
                "operationId": "storeExamStepFour",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreExamStepFour"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully created exam!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/exams/{exam}": {
            "get": {
                "tags": [
                    "Exam"
                ],
                "summary": "Get exam details",
                "description": "Returns exam details",
                "operationId": "getExamDetails",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "exam": {
                                            "$ref": "#/components/schemas/Exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/exams/totalMark/{id}": {
            "get": {
                "tags": [
                    "Exam"
                ],
                "summary": "Get students exam marks",
                "description": "Returns students exam marks",
                "operationId": "getExamAllStudentMarks",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exam id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully Calculated Exam Total Marks for all students",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "exam": {
                                            "$ref": "#/components/schemas/ExamStudent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/instructors": {
            "get": {
                "tags": [
                    "Instructors"
                ],
                "summary": "Get list of Instructors",
                "description": "Returns list of Instructors",
                "operationId": "getInstructorsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "instructors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Instructor"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/instructors/register": {
            "post": {
                "tags": [
                    "Instructors"
                ],
                "summary": "Sign up as instructor",
                "description": "Returns Instructor data",
                "operationId": "storeInstructor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreInstructorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Created instructor successfully"
                                        },
                                        "instructor": {
                                            "$ref": "#/components/schemas/Instructor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/instructors/{instructor}": {
            "get": {
                "tags": [
                    "Instructor"
                ],
                "summary": "Get instructor",
                "description": "Returns instructor",
                "operationId": "getInstructor",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "instructor": {
                                            "$ref": "#/components/schemas/Instructor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/instructors/me": {
            "get": {
                "tags": [
                    "Instructor"
                ],
                "summary": "Get instructor profile",
                "description": "Returns instructor profile",
                "operationId": "getInstructorProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "instructor": {
                                            "$ref": "#/components/schemas/Instructor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Instructors"
                ],
                "summary": "Edit instructor",
                "description": "Returns Instructor data",
                "operationId": "editInstructor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreInstructorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Updated instructor successfully"
                                        },
                                        "instructor": {
                                            "$ref": "#/components/schemas/Instructor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/question/create": {
            "post": {
                "tags": [
                    "Questions"
                ],
                "summary": "create question",
                "description": "Returns Question data",
                "operationId": "storeQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreQuestionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "question": {
                                            "$ref": "#/components/schemas/Question"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/question/edit/{id}": {
            "put": {
                "tags": [
                    "Questions"
                ],
                "summary": "Edit question",
                "description": "Returns Question data",
                "operationId": "editQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Question id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreQuestionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "question": {
                                            "$ref": "#/components/schemas/Question"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/question/delete/{id}": {
            "delete": {
                "tags": [
                    "Questions"
                ],
                "summary": "Delete existing question",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Question id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/schools": {
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get list of Schools",
                "description": "Returns list of Schools",
                "operationId": "getSchoolsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "schools": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/School"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/students": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get list of Students",
                "description": "Returns list of Students",
                "operationId": "getStudentsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "students": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Student"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/students/register": {
            "post": {
                "tags": [
                    "Students"
                ],
                "summary": "Sign up as Student",
                "description": "Returns Student data",
                "operationId": "storeStudent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreStudentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Created student successfully"
                                        },
                                        "student": {
                                            "$ref": "#/components/schemas/Student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/students/{id}": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get student",
                "description": "Returns student",
                "operationId": "getStudent",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "student": {
                                            "$ref": "#/components/schemas/Student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/students/me": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get Student profile",
                "description": "Returns student profile",
                "operationId": "getStudentProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "student": {
                                            "$ref": "#/components/schemas/Student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Students"
                ],
                "summary": "Edit student",
                "description": "Returns Student data",
                "operationId": "editStudent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreStudentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Updated student successfully"
                                        },
                                        "student": {
                                            "$ref": "#/components/schemas/Student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in as Student or as Instructor",
                "description": "login to your account",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreLoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "LoggedIn successfully"
                                        },
                                        "auth": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Email Or Password is incorrect"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out From your Account",
                "description": "logout from your account",
                "operationId": "logout",
                "responses": {
                    "201": {
                        "description": "Successfully Logged Out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You Have Successfully Logged Out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auth/changePassword": {
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "changing password",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password Updated Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auth/forgotPassword": {
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resetting password",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been successfully changed!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Request to reset password",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reset link sent!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/verifyEmail": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Request to verify email",
                "operationId": "verifyEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account verified!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ChangePasswordRequest": {
                "title": "changePasswordRequest",
                "description": "change password request body data",
                "required": [
                    "currentPassword",
                    "newPassword"
                ],
                "properties": {
                    "currentPassword": {
                        "title": "currentPassword",
                        "description": "User Current Password",
                        "type": "string",
                        "example": "12345678"
                    },
                    "newPassword": {
                        "title": "newPassword",
                        "description": "User New Password",
                        "type": "string",
                        "example": "Aaa45678"
                    }
                },
                "type": "object"
            },
            "ForgotPasswordRequest": {
                "title": "ForgotPasswordRequest",
                "description": "Forgot password request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string",
                        "example": "example@example.com"
                    }
                },
                "type": "object"
            },
            "Configuration": {
                "title": "Configuration",
                "description": "Exam Configuration model",
                "properties": {
                    "exam_id": {
                        "title": "examId",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "faceRecognition": {
                        "title": "Face Recognition",
                        "type": "boolean",
                        "example": "true"
                    },
                    "faceDetection": {
                        "title": "Face Detection",
                        "type": "boolean",
                        "example": "true"
                    },
                    "questionsRandomOrder": {
                        "title": "Questions Random Order",
                        "type": "boolean",
                        "example": "true"
                    },
                    "plagiarismCheck": {
                        "title": "plagiarism check",
                        "type": "boolean",
                        "example": "true"
                    },
                    "disableSwitchBrowser": {
                        "title": "disable switching browser",
                        "type": "boolean",
                        "example": "true"
                    },
                    "gradingMethod": {
                        "title": "grading method",
                        "description": "grading method",
                        "type": "string",
                        "example": "manual"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Configurations"
                }
            },
            "Department": {
                "title": "Department",
                "description": "Department model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "name of department",
                        "type": "string",
                        "example": "Science department"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "school_id": {
                        "title": "School ID",
                        "description": "School id of instructor or student",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "school": {
                        "$ref": "#/components/schemas/School"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Department"
                }
            },
            "Exam": {
                "title": "Exam",
                "description": "Exam model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "name of Exam",
                        "type": "string",
                        "example": "Exam 1"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of Exam",
                        "type": "string",
                        "example": "This exam is 60 minutes long!"
                    },
                    "startAt": {
                        "title": "startAt",
                        "description": "Start time of exam(DateTime)",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-10-29 14:28:54"
                    },
                    "endAt": {
                        "title": "endAt",
                        "description": "End time of exam",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-10-29 14:28:54"
                    },
                    "duration": {
                        "title": "Duration",
                        "description": "duration of exam",
                        "format": "date",
                        "example": "01:30:00"
                    },
                    "numberOfTrials": {
                        "title": "numberOfTrials",
                        "description": "Number of trials of exam",
                        "type": "integer",
                        "example": "3"
                    },
                    "totalMark": {
                        "title": "totalMark",
                        "description": "Total mark of exam",
                        "type": "integer",
                        "example": "60"
                    },
                    "examSubject": {
                        "title": "examSubject",
                        "description": "Subject of Exam",
                        "type": "string",
                        "example": "Maths"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Exam"
                }
            },
            "ExamStudent": {
                "title": "ExamStudent",
                "description": "ExamStudent model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "student_id": {
                        "title": "student ID",
                        "description": "Student id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "student": {
                        "$ref": "#/components/schemas/Student"
                    },
                    "exam_id": {
                        "title": "exam ID",
                        "description": "Exam id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "exam": {
                        "$ref": "#/components/schemas/Exam"
                    },
                    "totalMark": {
                        "title": "totalMark",
                        "description": "Total mark of exam",
                        "type": "integer",
                        "example": "60"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ExamStudent"
                }
            },
            "Instructor": {
                "title": "Instructor",
                "description": "Instructor model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "degree": {
                        "title": "degree",
                        "description": "degree of instructor",
                        "type": "string",
                        "example": "PhD"
                    },
                    "verified": {
                        "title": "verified",
                        "description": "verified Instructor",
                        "type": "boolean",
                        "example": "true"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "user_id": {
                        "title": "user ID",
                        "description": "User id of instructor",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "departments": {
                        "$ref": "#/components/schemas/Department"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Instructor"
                }
            },
            "Question": {
                "title": "Question",
                "description": "Question model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "questionText": {
                        "title": "questionText",
                        "description": "questionText",
                        "type": "string",
                        "example": "How many days are in the week?"
                    },
                    "type": {
                        "title": "type",
                        "description": "type",
                        "type": "string",
                        "example": "mcq"
                    },
                    "mark": {
                        "title": "mark",
                        "description": "mark",
                        "type": "string",
                        "example": "2"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-05-22 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-05-22 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Question"
                }
            },
            "School": {
                "title": "School",
                "description": "School model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "name of instructor",
                        "type": "string",
                        "example": "Science department"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "School"
                }
            },
            "Student": {
                "title": "Student",
                "description": "Student model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "studentCode": {
                        "title": "studentCode",
                        "description": "studentCode of student",
                        "type": "string",
                        "example": "1702"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-05-22 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-05-22 17:50:45"
                    },
                    "user_id": {
                        "title": "user ID",
                        "description": "User id of student",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "department_id": {
                        "title": "department ID",
                        "description": "Department id of student",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "department": {
                        "$ref": "#/components/schemas/Department"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Student"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "firstName": {
                        "title": "First Name",
                        "description": "First name of User",
                        "type": "string",
                        "example": "Laila"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of User",
                        "type": "string",
                        "example": "h@ex.com"
                    },
                    "lastName": {
                        "title": "Last Name",
                        "description": "Last name of User",
                        "type": "string",
                        "example": "Mohsen"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of User",
                        "type": "string",
                        "example": "123456"
                    },
                    "gender": {
                        "title": "gender",
                        "description": "gender of User",
                        "type": "string",
                        "example": "female"
                    },
                    "image": {
                        "title": "image",
                        "description": "image of User",
                        "type": "string",
                        "example": "http://pixels.com/4040"
                    },
                    "type": {
                        "title": "type",
                        "description": "type of User",
                        "type": "string",
                        "example": "Admin"
                    },
                    "phone": {
                        "title": "phone",
                        "description": "phone of User",
                        "type": "string",
                        "example": "012233344455"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "email_verified_at": {
                        "title": "Email verified at",
                        "description": "Email verified at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "ResetPasswordRequest": {
                "title": "ResetPasswordRequest",
                "description": "Reset password request body data",
                "required": [
                    "email",
                    "token",
                    "password"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "token": {
                        "title": "token",
                        "description": "Reset password url token",
                        "type": "string",
                        "example": "64 char string"
                    },
                    "password": {
                        "title": "password",
                        "description": "new password",
                        "type": "string",
                        "example": "yuiuiui"
                    }
                },
                "type": "object"
            },
            "StoreExamStepFour": {
                "title": "StoreExamStepFour",
                "description": "Creating an exam, step Two: add questions' marks and time",
                "required": [
                    "examId",
                    "questions"
                ],
                "properties": {
                    "examId": {
                        "title": "Exam Id",
                        "description": "id of Exam",
                        "type": "integer",
                        "example": "3"
                    },
                    "questions": {
                        "title": "questions",
                        "description": "questions of the new instructor",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "mark": {
                                    "type": "float",
                                    "example": "50"
                                },
                                "time": {
                                    "type": "time",
                                    "example": "01:30:00"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreExamStepOne": {
                "title": "StoreExamStepOne",
                "description": "Creating an exam, step one: storing its data",
                "required": [
                    "name",
                    "numberOfTrials",
                    "description",
                    "totalMark",
                    "duration",
                    "startAt",
                    "endAt",
                    "examSubject"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "name of Exam",
                        "type": "string",
                        "example": "Exam 1"
                    },
                    "numberOfTrials": {
                        "title": "numberOfTrials",
                        "description": "Number of trials of exam",
                        "type": "integer",
                        "example": "3"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of Exam",
                        "type": "string",
                        "example": "This exam is 60 minutes long!"
                    },
                    "totalMark": {
                        "title": "totalMark",
                        "description": "Total mark of exam",
                        "type": "integer",
                        "example": "60"
                    },
                    "duration": {
                        "title": "Duration",
                        "description": "duration of exam",
                        "format": "date",
                        "example": "01:30:00"
                    },
                    "startAt": {
                        "title": "startAt",
                        "description": "Start time of exam(DateTime)",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-10-29 14:28:54"
                    },
                    "endAt": {
                        "title": "endAt",
                        "description": "End time of exam",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-10-29 14:28:54"
                    },
                    "examSubject": {
                        "title": "Exam Subject",
                        "description": "Exam Subject",
                        "type": "string",
                        "example": "Maths"
                    }
                },
                "type": "object"
            },
            "StoreExamStepThree": {
                "title": "StoreExamStepThree",
                "description": "Creating an exam, step Two: add questions",
                "required": [
                    "examId",
                    "questions"
                ],
                "properties": {
                    "examId": {
                        "title": "Exam Id",
                        "description": "id of Exam",
                        "type": "integer",
                        "example": "3"
                    },
                    "questions": {
                        "title": "questions",
                        "description": "questions of the new instructor",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreExamStepTwo": {
                "title": "StoreExamStepTwo",
                "description": "Creating an exam, step Two: add configuration options",
                "required": [
                    "examId",
                    "faceRecognition",
                    "faceDetection",
                    "questionsRandomOrder",
                    "plagiarismCheck",
                    "disableSwitchBrowser",
                    "gradingMethod"
                ],
                "properties": {
                    "examId": {
                        "title": "Exam Id",
                        "description": "id of Exam",
                        "type": "integer",
                        "example": "3"
                    },
                    "faceRecognition": {
                        "title": "Face Recognition",
                        "type": "boolean",
                        "example": "true"
                    },
                    "faceDetection": {
                        "title": "Face Detection",
                        "type": "boolean",
                        "example": "true"
                    },
                    "questionsRandomOrder": {
                        "title": "Questions Random Order",
                        "type": "boolean",
                        "example": "true"
                    },
                    "plagiarismCheck": {
                        "title": "plagiarism check",
                        "type": "boolean",
                        "example": "true"
                    },
                    "disableSwitchBrowser": {
                        "title": "disable switching browser",
                        "type": "boolean",
                        "example": "true"
                    },
                    "gradingMethod": {
                        "title": "grading method",
                        "description": "grading method",
                        "type": "string",
                        "example": "manual"
                    }
                },
                "type": "object"
            },
            "StoreInstructorRequest": {
                "title": "StoreInstructorRequest",
                "description": "Store Instructor request body data",
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "description",
                    "gender",
                    "image",
                    "phone",
                    "type",
                    "degree",
                    "departments"
                ],
                "properties": {
                    "firstName": {
                        "title": "first Name",
                        "description": "first name of the new instructor",
                        "type": "string",
                        "example": "Ahmed"
                    },
                    "lastName": {
                        "title": "last Name",
                        "description": "last name of the new instructor",
                        "type": "string",
                        "example": "Mohamed"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new instructor",
                        "type": "string",
                        "example": "This is new instructor's description"
                    },
                    "email": {
                        "title": "email",
                        "description": "email of the new instructor",
                        "type": "string",
                        "example": "This is new instructor's email"
                    },
                    "password": {
                        "title": "password",
                        "description": "password of the new instructor",
                        "type": "string",
                        "example": "1515222aa"
                    },
                    "gender": {
                        "title": "gender",
                        "description": "gender of the new instructor",
                        "type": "string",
                        "example": "male"
                    },
                    "image": {
                        "title": "image",
                        "description": "image of the new instructor",
                        "type": "string",
                        "example": "https://google.com/pepepepaaa"
                    },
                    "phone": {
                        "title": "phone",
                        "description": "phone of the new instructor",
                        "type": "string",
                        "example": "02221111111"
                    },
                    "type": {
                        "title": "type",
                        "description": "type of the new instructor",
                        "type": "string",
                        "example": "instructor"
                    },
                    "degree": {
                        "title": "degree",
                        "description": "degree of the new instructor",
                        "type": "string",
                        "example": "This is new instructor's degree"
                    },
                    "departments": {
                        "title": "departments",
                        "description": "departments of the new instructor",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreLoginRequest": {
                "title": "StoreLoginRequest",
                "description": "Store Login request body data",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "email of the user",
                        "type": "string",
                        "example": "omar@example.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "password of the user",
                        "type": "string",
                        "example": "12345678"
                    }
                },
                "type": "object"
            },
            "StoreQuestionRequest": {
                "title": "StoreQuestionRequest",
                "description": "Store Question request body data",
                "required": [
                    "questionText",
                    "type",
                    "mark",
                    "answers",
                    "correctAnswer"
                ],
                "properties": {
                    "questionText": {
                        "title": "Question Text",
                        "description": "question text",
                        "type": "string",
                        "example": "How many days are in the week?"
                    },
                    "type": {
                        "title": "type",
                        "description": "the type of the question",
                        "type": "string",
                        "example": "mcq"
                    },
                    "mark": {
                        "title": "mark",
                        "description": "the mark of the question",
                        "type": "string",
                        "example": "2"
                    },
                    "answers": {
                        "title": "answers",
                        "description": "answers",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": [
                                "seven",
                                "four",
                                "two",
                                "ten"
                            ]
                        }
                    },
                    "correctAnswer": {
                        "title": "correctAnswer",
                        "description": "correct Answer",
                        "type": "string",
                        "example": "seven"
                    }
                },
                "type": "object"
            },
            "StoreStudentRequest": {
                "title": "StoreStudentRequest",
                "description": "Store Student request body data",
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "description",
                    "gender",
                    "image",
                    "phone",
                    "type",
                    "studentCode",
                    "department"
                ],
                "properties": {
                    "firstName": {
                        "title": "first Name",
                        "description": "first name of the new student",
                        "type": "string",
                        "example": "Laila"
                    },
                    "lastName": {
                        "title": "last Name",
                        "description": "last name of the new student",
                        "type": "string",
                        "example": "Mohsen"
                    },
                    "email": {
                        "title": "email",
                        "description": "email of the new student",
                        "type": "string",
                        "example": "h@ex.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "password of the new student",
                        "type": "string",
                        "example": "123456"
                    },
                    "gender": {
                        "title": "gender",
                        "description": "gender of the new student",
                        "type": "string",
                        "example": "female"
                    },
                    "image": {
                        "title": "image",
                        "description": "image of the new student",
                        "type": "string",
                        "example": "http://pixels.com/4040"
                    },
                    "phone": {
                        "title": "phone",
                        "description": "phone of the new student",
                        "type": "string",
                        "example": "012233344455"
                    },
                    "type": {
                        "title": "type",
                        "description": "type of the new student",
                        "type": "string",
                        "example": "student"
                    },
                    "studentCode": {
                        "title": "studentCode",
                        "description": "studentCode of the new student",
                        "type": "string",
                        "example": "1702"
                    },
                    "department": {
                        "title": "department",
                        "description": "department of the new student",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "VerifyEmailRequest": {
                "title": "VerifyEmailRequest",
                "description": "Email verification request body data",
                "required": [
                    "email",
                    "code"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "code": {
                        "title": "code",
                        "description": "Vericication code",
                        "type": "string",
                        "example": "6C3BT5"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}